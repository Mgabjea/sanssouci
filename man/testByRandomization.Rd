% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/testByRandomization.R
\name{testByRandomization}
\alias{testByRandomization}
\title{Randomization-based testing for equal means in two groups}
\usage{
testByRandomization(X, B, flavor = c("perm", "flip"), cls = NULL,
  p.value = TRUE, seed = NULL)
}
\arguments{
\item{X}{a matrix of \code{m} variables by \code{n} observations}

\item{B}{A numeric value, the number of permutations to be performed}

\item{flavor}{A character value, the type of randomization to be performed.
Should either be "perm" for two-sample permutation or "flip" for sign
flipping.}

\item{cls}{A vector of length \code{n} class labels in \code{0,1} for flavor
"perm". Defaults to NULL}

\item{p.value}{A boolean value: should randomization \eqn{p}-values be
calculated and returned? Defaults to @TRUE}

\item{seed}{An integer (or NULL) value used as a seed for random number
generation. If \code{NULL}, no seed is specified}
}
\value{
a list with elements: \describe{

  \item{T}{A vector of \eqn{m} test statistics}

  \item{T0}{A \eqn{m \times B} matrix of randomized test statistics}

  \item{p}{A vector of \eqn{m} \eqn{p}-values (only if \code{p.value} is
\code{TRUE} )}

  \item{p0}{A \eqn{m \times B} matrix of randomization \eqn{p}-values (only
  if \code{p.value} is \code{TRUE} )}

  \item{param.p}{A vector of \eqn{m} parametric \eqn{p}-values (only for flavor
  "permutation")}

  \item{param.p0}{A \eqn{m \times B} matrix of parametric \eqn{p}-values on permuted data (only for flavor "permutation" )} 
  
  \item{df}{A vector of \eqn{m} degrees of freedom for the observed statistics (only for flavor "permutation")}

  \item{df0}{A \eqn{m \times B} matrix of degrees of freedom on permuted data (only
  for flavor "permutation" )} }
}
\description{
Randomization-based testing for equal means in two groups
}
\details{
If \code{flavor == "permutation"}, the test is Welch's two-sample
  test for unequal variances. The corresponding parametric p-values are
  returned as elements \code{param.p} (for the original data) and
  \code{param.p0} (for the permutations).
}
\examples{

p <- 510
n <- 380
B <- 1e3
mat <- matrix(rnorm(p*n), ncol=n)
cls <- rep(c(0, 1), times=c(n/2, n-n/2))
resPerm <- testByRandomization(X=mat, flavor="perm", cls=cls, B=B)
resFlip <- testByRandomization(X=mat, flavor="flip", B=B)

# empirical coverage of Simes thresholds
alpha <- 0.2
thr <- SimesThresholdFamily(p)(alpha)
sansSouci:::empiricalCoverage(thr, resPerm$T0) ## Welch, not Gaussian
sansSouci:::empiricalCoverage(thr, qnorm(1-resPerm$p0))
sansSouci:::empiricalCoverage(thr, qnorm(1-resPerm$param.p0))

sansSouci:::empiricalCoverage(thr, resFlip$T0)
sansSouci:::empiricalCoverage(thr, qnorm(1-resFlip$p0))

# test statistics null distribution
hist(resPerm$p)
hist(resFlip$p)

alpha <- 0.05
resP <- jointFWERControl(resPerm$T0, refFamily="Simes", alpha=alpha, stat=resPerm$T)
resF <- jointFWERControl(resFlip$T0, refFamily="Simes", alpha=alpha, stat=resFlip$T)

}
\references{
Ge, Y., Dudoit, S. and Speed, T.P., 2003. Resampling-based
  multiple testing for microarray data analysis. _Test_, 12(1), pp.1-77.
}
