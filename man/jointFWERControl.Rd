% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jointFWERControl.R
\name{jointFWERControl}
\alias{jointFWERControl}
\title{Calibration of joint Family-Wise error rate thresholds}
\usage{
jointFWERControl(mat, refFamily = c("Simes", "kFWER"), alpha, stat = NULL,
  maxStepsDown = 100, kMax = nrow(mat), Rcpp = TRUE, verbose = TRUE)
}
\arguments{
\item{mat}{A \eqn{m} x \eqn{B} matrix of Monte-Carlo samples of
test statistics under the null hypothesis. \describe{
\item{m}{is the number of tested hypotheses} \item{B}{is the
number of Monte-Carlo samples}}}

\item{refFamily}{A character value which can be \describe{
\item{Simes}{The classical family of thresholds introduced by
Simes (1986): \eqn{\alpha*k/m}. This family yields joint FWER
control if the test statistics are positively dependent (PRDS)
under H0.}
\item{kFWER}{A family \eqn{(t_k)} calibrated so that for each k,
\eqn{(t_k)} controls the (marginal) k-FWER.}}}

\item{alpha}{Target joint FWER level.}

\item{stat}{A vector of \eqn{m} test statistics. Not used for
single step control, and mandatory for step-down JFWER control. If
not provided, single step control is performed.}

\item{maxStepsDown}{Maximum number of steps down to be performed.
\code{maxSteps=1} corresponds to single step JFWER control.}

\item{kMax}{For simultaneous control of (\eqn{k}-FWER for all
\eqn{k \le k[max]}).}

\item{Rcpp}{If \code{TRUE}, some costly operations (sorting) are
performed in C++.}

\item{verbose}{A boolean value: should extra info be printed?}
}
\value{
A list with elements: \describe{
    \item{thr}{A numeric vector of length \code{m}, such that the
    estimated probability that there exists an index \eqn{k} between 1
    and m such that the k-th maximum of the test statistics of is
    greater than \eqn{thr[k]}, is less than \eqn{\alpha}.}
    \item{pivStat}{A numeric vector of length \code{m}, the values of the pivotal
    statistic whose quantile of order \eqn{alpha} is \eqn{lambda}.}
    \item{lambda}{JFWER threshold.}
    \item{Vbar}{An upper bound on the number of false discoveries,
    as calculated by \code{upperBoundFP(stat, thr)}.}
    \item{steps}{a list with elements named 'thr', 'pivStat' and
    'lambda' giving the sequence of corresponding vectors/values
    along the steps down.}}
}
\description{
Calibration of a family of thresholds that provide joint FWER control
}
\examples{

set.seed(0xBEEF)
sim <- simulateMein2006(m=1e2, rho=0.2, n=300, B=1e3, pi0=0.9, SNR=2)
X <- sim$X
y <- sim$y
H0 <- which(sim$H==0)
H1 <- which(sim$H==1)
m0 <- length(H0)
m1 <- length(H1)

## Test statistics
w <- wilcoxStat(X, y, B=ncol(X))
scoreMat <- w$stat0Mat
stat <- w$stat

if (FALSE) {
  pch <- 20
  ## show test statistics
  plot(stat, col=rep(c(1, 2), times=c(m0, m1)), main="Test statistics", pch=pch)
  legend("topleft", c("H0", "H1"), pch=pch, col=1:2)
}

alpha <- 0.1
res <- jointFWERControl(scoreMat, refFamily="kFWER", alpha=alpha, stat=stat)
Vbar <- res$Vbar
V <- cumsum(order(stat, decreasing=TRUE) \%in\% H0)

}
\author{
Gilles Blanchard, Pierre Neuvial and Etienne Roquain
}

