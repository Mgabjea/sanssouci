% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/partialColSortDesc.R
\name{partialColSortDesc}
\alias{partialColSortDesc}
\title{partialColSortDesc}
\usage{
partialColSortDesc(mat, k = nrow(mat), Rcpp = TRUE)
}
\arguments{
\item{mat}{a \code{m} x \code{B} numeric matrix}

\item{k}{an integer value between 1 and \code{m}}

\item{Rcpp}{sorting is performed in C++ if \code{TRUE} (the default), and
using \code{base::sort} if \code{FALSE}.}
}
\value{
a \code{k} x \code{B} numeric matrix, whose \code{b}-th
column corresponds to the \code{k} largest values of the
\code{b}-th column of \code{mat}, sorted decreasingly.
}
\description{
partial sorting of the columns of a matrix by descending order
}
\examples{

A <- matrix(rnorm(15), 5, 3);
print(A)
BR <- partialColSortDesc(A, 2, Rcpp=FALSE);
B <- partialColSortDesc(A, 2, Rcpp=TRUE);
stopifnot(identical(B,BR));

if (require("rbenchmark")) {
    A <- matrix(rnorm(1e6), 10000, 1000);
    kmax <- 100;
    benchmark(partialColSortDesc(A, kmax, Rcpp=TRUE),
              partialColSortDesc(A, kmax, Rcpp=FALSE),
              replications=1)
}

}
\author{
Gilles Blanchard, Pierre Neuvial and Etienne Roquain
}
