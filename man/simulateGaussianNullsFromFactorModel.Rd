% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulateGaussianNullsFromFactorModel.R
\name{simulateGaussianNullsFromFactorModel}
\alias{simulateGaussianNullsFromFactorModel}
\title{simulateGaussianNullsFromFactorModel}
\usage{
simulateGaussianNullsFromFactorModel(m, n = 1, flavor = c("independent",
  "equi-correlated", "3-factor"), rho = 0, cov = FALSE)
}
\arguments{
\item{m}{Number of tests}

\item{n}{Number of replications of the simulation}

\item{flavor}{The type of factor model to be simulated}

\item{rho}{\code{1-rho} is the standard deviation of the noise}

\item{cov}{should the covariance matrix of the model be returned ?}
}
\value{
A \code{m x n} \code{Matrix} simulated test statistics.  If
\code{cov} is set to TRUE, the covariance matrix of the model may be
accessed by \code{attr(Y, "Sigma")}.
}
\description{
Simulate test statistic null distribution in a Gaussian factor model
}
\examples{

m <- 20

## independent
Y <- sansSouci:::simulateGaussianNullsFromFactorModel(m, 
    flavor = "independent")
  image(Y)

## equi-correlated
Y <- sansSouci:::simulateGaussianNullsFromFactorModel(m, 
    flavor = "equi-correlated", rho = 0.2, cov = TRUE)
S <- attr(Y, "Sigma")
image(S)

## check equi-correlation:
Y <- sansSouci:::simulateGaussianNullsFromFactorModel(m, 
    n = 1237, flavor = "equi-correlated", rho = 0.2)
covmat <- cov(t(Y))
image(covmat)
diag(covmat) <- NA
dim(covmat) <- NULL
summary(covmat)

## 3-factor model
m <- 4*floor(m/4) ## make sure m/4 is an integer
S3 <- sansSouci:::simulateGaussianNullsFromFactorModel(m, 
    flavor = "3-factor", rho = 0.5)
image(S3)

}
\author{
Gilles Blanchard, Pierre Neuvial and Etienne Roquain
}
